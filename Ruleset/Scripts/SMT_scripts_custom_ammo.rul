extended:
  tags:
    RuleItem:
      SMT_AMMO_BONUSDMG_FIRINGACC: int # % bonus damage granted from units Firing Accuracy: (FA - 100) * Tag / 100
      SMT_DEREVENANT_AMMO: int # Instantly kills Necrons that are or will be knocked unconcious - value = % bonus damage added against 2x2 Necrons that can't be stunned
      SMT_AMMO_HP_PREDMG: int # % of power directly added to health damage ignoring armor

items:
  - &STR_PRECISION_AMMO                 # Precision Template
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 10
    scripts:
      hitUnitAmmo: |
        var int attackerFA;
        var int precisionBonus;

        damaging_item.getTag precisionBonus Tag.SMT_AMMO_BONUSDMG_FIRINGACC;
        attacker.Stats.getFiring attackerFA;
        sub attackerFA 100; # only units with FA above 100 benefit
        #debug_log "PrecisionDmg pinged " precisionBonus attackerFA;
        if and gt precisionBonus 0 gt attackerFA 0;
          muldiv attackerFA precisionBonus 100;
          add power attackerFA;
          #debug_log "PrecisionDmg " attackerFA power;
        end;

        return power part side;

  - type: STR_PISTOL_CLIP_MC            # Boltpistol
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80

  - type: STR_RIFLE_CLIP_MC             # Bolter
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80

  - type: STR_LIGHT_BOLTPISTOL_AMMO_MC  # Light Boltpistol
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 15 # base power 70 (+10 over regular)

  - type: STR_LIGHT_BOLTER_AMMO_MC      # Light Bolter
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 15 # base power 70 (+10 over regular)

  - type: STR_AC_MC_AMMO                # Heavy Bolter
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 90

  - type: STR_AC_MC_BELT                # Heavy Bolter Belt
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 90

  - type: STR_HB_CLIP_MC                # Stormbolter
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80

  - type: STR_BOLTRIFLE_DRUM_MC         # Boltrifle Drum
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80

  - type: STR_BOLTRIFLE_DRUM_MC_DW      # Boltrifle Drum (DW)
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80

  - type: STR_ABSOLVOR_AMMO_MC          # Absolvor (DW)
    refNode: *STR_PRECISION_AMMO
    tags:
      SMT_AMMO_BONUSDMG_FIRINGACC: 33 # base power 80




  - &STR_DEREVENANT_AMMO                # Derevenant Template
    tags:
      SMT_DEREVENANT_AMMO: 1
    scripts:
      damageUnitAmmo: |
        var ptr RuleArmor targetArmor;
        var int derevBonus;
        var int totalStun;
        var int temp;

        unit.getRuleArmor targetArmor;
        targetArmor.getTag temp Tag.ARMOR_TENACIOUS_HP_MOD; # Necron tag
        damaging_item.getTag derevBonus Tag.SMT_DEREVENANT_AMMO;

        # if and eq temp 1 gt derevBonus 0; # things with a tenacious value of 1 are instant-reviving Necrons
            # unit.setSpawnUnitInstantRespawn 1; # force them to transform immediately
        # end;

        if and gt temp 0 gt derevBonus 0;
          #debug_log "DerevDmg pinged B/H " derevBonus to_health;
          targetArmor.getSize temp; # if unit is 2x2 deal extra damage directly (2x2 can't be stunned)
          if ge temp 2;
            add derevBonus 100;
            muldiv to_health derevBonus 100; # Derev value is added to damage as % bonus
            #debug_log "DerevDmg 2x2 B/H " derevBonus to_health;
            return;
          end;

          unit.getHealth temp;
          unit.getStun totalStun;
          debug_log "DerevDmg Initial Stun OS/NS/TH/UH " totalStun to_stun to_health temp;
          add totalStun to_stun;
          add totalStun to_health;
          if ge totalStun temp; # if unit is or will be knocked unconcious, kill it
            unit.setSpawnUnit null; # prevent respawning via zombie effects
            unit.setSpawnUnitInstantRespawn 0;
            unit.setHealthWithOverkill -1;
            set to_health 0; # prevent overkill melting
            targetArmor.getTag temp Tag.ARMOR_TENACIOUS_HP_MOD;
            add to_health temp; # add just enough damage to make sure it deals 1 damage through Necron resist (for red damage indicator flash)
            #debug_log "Derev Knockout bonus triggered " temp totalStun;
          end;
          unit.getHealth temp;
          #debug_log "DerevDmg H/D " temp to_health;
        end;

        return;

  - type: STR_RIFLE_CLIP_DEREV          # DW Bolter ammo
    refNode: *STR_DEREVENANT_AMMO
    tags:
      SMT_DEREVENANT_AMMO: 10

  - type: STR_BOLT_SNIPER_AMMO_DEREV    # DW Bolt Sniper ammo
    refNode: *STR_DEREVENANT_AMMO
    tags:
      SMT_DEREVENANT_AMMO: 200


  - &STR_ARMOR_IGNORING_AMMO            # Penetrating damage Template
    tags:
      SMT_AMMO_HP_PREDMG: 10
    scripts:
      damageUnitAmmo: |
        var int dmgMult;
        var int damage;
        var int type;

        damaging_item.getTag dmgMult Tag.SMT_AMMO_HP_PREDMG;
        #debug_log "to_healthPre Ping OP/CP/hpPre/tohp/type " orig_power currPower dmgMult to_health damaging_type;
        if and gt orig_power 0 gt dmgMult 0;
          set damage orig_power;
          muldiv damage dmgMult 100;
          unit.reduceByResistance damage damaging_type;
          add to_health damage;
        end;
        #debug_log "to_healthPre End OP/CP/hpPre/tohp " orig_power currPower dmgMult to_health;

        return;

  - type: STR_VOLKITE_DW                # DW Volkite Rifle
    refNode: *STR_ARMOR_IGNORING_AMMO
    tags:
      SMT_AMMO_HP_PREDMG: 50

  - type: STR_VOLKITE_VAULT             # Volkite Rifle (Ancient Vault Reward)
    refNode: *STR_ARMOR_IGNORING_AMMO
    tags:
      SMT_AMMO_HP_PREDMG: 50







