extended:
  tagsFile: Ruleset/Scripts/SMT_tags.rul

  scripts:
    newTurnUnit:
      #*** Script that regenerates unit health while increasing wound recovery time ***
      - new: SMTS_regen_health
        offset: 1
        code: |
          var ptr RuleArmor unitArmor;
          var ptr RuleSoldier unitSoldier;
          var int unitMaxHp;
          var int unitCurrentHp;
          var int regenHp;
          var int temp;

          # only run at the start of the owners turn (enemies don't care about recovery time and shouldn't be using this script)
          unit.getFaction temp;
          if neq side temp;
            return;
          end;

          unit.getRuleArmor unitArmor;
          unit.getRuleSoldier unitSoldier;
          unit.getHealthMax unitMaxHp;
          unit.getHealth unitCurrentHp;
          unitSoldier.getTag regenHp Tag.SMT_UNIT_REGEN_HP;
          unitArmor.getTag temp Tag.SMT_ARMOR_REGEN_HP;
          add regenHp temp; #combine regen bonuses from armor & soldiertype
          if le regenHp 0;  #skip if regen is <=0
            return;
          end;

          muldiv unitMaxHp 80 100; # cap regeneration at 80% of max
          if or ge unitCurrentHp unitMaxHp le unitCurrentHp 0; #skip if hp is >=cap or <=0
            #debug_log "Regen Aborted - Max/Current Hp: " unitMaxHp unitCurrentHp;
            return;
          end;
          
          #debug_log "Old Health: " unitCurrentHp;
          #debug_log "Regen HP: " regenHp;
          unit.getTag temp Tag.SMT_RECOVERY_TIME; #keep count of how much hp has been restored for medbay recovery time
          add temp regenHp;
          unit.setTag Tag.SMT_RECOVERY_TIME temp;
          add unitCurrentHp regenHp;
          if lt unitMaxHp unitCurrentHp; #don't overheal if regen would go over max
            set unitCurrentHp unitMaxHp;
          end;
          #debug_log "New Health: " unitCurrentHp;
          unit.setHealthWithOverkill unitCurrentHp;
          return;

      - new: SMTS_regen_wounds
        offset: 2
        code: |
          var ptr RuleSoldier unitSoldier;
          var int woundRecovery;
          var int temp;

          unit.getFaction temp;
          if neq side temp; # don't trigger on others' turns
            return;
          end;

          unit.getFatalwoundsTotal temp;
          if lt temp 1; # skip if unit isn't wounded
            return;
          end;

          unit.getRuleSoldier unitSoldier;
          unitSoldier.getTag woundRecovery Tag.SMT_UNIT_REGEN_WOUND;
          if eq woundRecovery 0; # skip if unit doesn't regen wounds
            return;
          end;

          begin; #from rosigma wound regen
            var int numWounds 0;
            var int healWounds woundRecovery;
            loop var i 6; #cycle through the body parts
              unit.getFatalwounds numWounds i; #check the number of wounds in this bodypart
              if and gt numWounds 0 gt healWounds 0; #if there are any wounds in this body part and any heals remaining, remove as many as we can
                set temp numWounds; #save the initial number of wounds
                sub numWounds healWounds; #remove wounds equal to our heal wound count
                sub healWounds temp; #decrement the number of heals by the initial number of wounds
                limit_lower numWounds 0; #ensure wounds do not go below 0
                limit_lower healWounds 0; #ensure heals do not go below 0
                unit.setFatalwounds i numWounds; #remove the wounds
                unit.getFatalwoundsTotal numWounds; #recalculate wounds
              end;
            end;
          end;

          return;


    returnFromMissionUnit:
      #*** Increases wound times for soldiers who received battlefield healing ***
      - new: SMTS_healing_recovery_penalty
        offset: 80
        code: |
          var ptr RuleSoldier soldierRuleset;
          var int woundTimeMultiplier;
          var int recoverPenaltyMultiplier;
          var int recoverPenalty;

          if eq recovery_time 0; # skip if the unit has no initial recovery time (either because it ignores injury time or was healed to full by medics)
            return;
          end;

          unit.getRuleSoldier soldierRuleset;
          soldierRuleset.getTag woundTimeMultiplier Tag.SOLDIER_WOUND_TIME_MULTIPLIER;
          unit.getTag recoverPenalty Tag.SMT_RECOVERY_TIME;
          soldierRuleset.getTag recoverPenaltyMultiplier Tag.SMT_UNIT_REGEN_PENALTY_REDUCTION;
          if ge recoverPenaltyMultiplier 100;
            return; # skip if unit ignores penalty for healing
          end;
          
          sub recoverPenaltyMultiplier 100;
          mul recoverPenaltyMultiplier -1;
          muldiv recoverPenalty recoverPenaltyMultiplier 100;
          #debug_log "Initial RecoveryTime: " recovery_time recoverPenalty;
          limit_upper recoverPenalty 20; # don't add more than 20 extra days to woundtime (pre multiplier)

          if neq woundTimeMultiplier 0; #adjust based on soldier recovery speed
            muldiv recoverPenalty woundTimeMultiplier 100;
          end;

          add recovery_time recoverPenalty;
          #debug_log "Final Recoverytime: " recovery_time recoverPenalty;

          return;



soldiers:
  - type: STR_SOLDIER
    tags:
      SMT_UNIT_REGEN_HP: 5
      SMT_UNIT_REGEN_WOUND: 1

  - type: STR_SOLDIER_NEOPHYTE
    tags:
      SMT_UNIT_REGEN_HP: 2 # Neophytes get only minor healing
      SMT_UNIT_REGEN_WOUND: 0

  - type: STR_SOLDIER_TERMINATOR
    tags:
      SMT_UNIT_REGEN_HP: 8
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_SOLDIER_CAPTAIN
    tags:
      SMT_UNIT_REGEN_HP: 10
      SMT_UNIT_REGEN_WOUND: 3

  - type: STR_SOLDIER_CHAPLAIN
    tags:
      SMT_UNIT_REGEN_HP: 8
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_SOLDIER_LIBRARIAN
    tags:
      SMT_UNIT_REGEN_HP: 5
      SMT_UNIT_REGEN_WOUND: 1

  - type: STR_SOLDIER_LIBRARIAN_TERM
    tags:
      SMT_UNIT_REGEN_HP: 8
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_PRIMARISLV1
    tags:
      SMT_UNIT_REGEN_HP: 5
      SMT_UNIT_REGEN_WOUND: 1

  - type: STR_PRIMARISLV2
    tags:
      SMT_UNIT_REGEN_HP: 6
      SMT_UNIT_REGEN_WOUND: 1

  - type: STR_PRIMARISLV3
    tags:
      SMT_UNIT_REGEN_HP: 7
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_PRIMARISLV4
    tags:
      SMT_UNIT_REGEN_HP: 8
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_PRIMARISLV5
    tags:
      SMT_UNIT_REGEN_HP: 10
      SMT_UNIT_REGEN_WOUND: 3

  - type: STR_PRIMARIS_APOTH
    tags: # Apoth armor bonus builtin
      SMT_UNIT_REGEN_HP: 10
      SMT_UNIT_REGEN_WOUND: 3

  - type: STR_PRIMARIS_APOTH_BIO
    tags: # Apoth armor bonus builtin
      SMT_UNIT_REGEN_HP: 12
      SMT_UNIT_REGEN_WOUND: 4

  - type: STR_PRIMARIS_JUDICAR
    tags:
      SMT_UNIT_REGEN_HP: 6
      SMT_UNIT_REGEN_WOUND: 1

  - type: STR_PRIMARIS_CHAPLAIN
    tags:
      SMT_UNIT_REGEN_HP: 8
      SMT_UNIT_REGEN_WOUND: 2

  - type: STR_BLOODRAVENS_MARINE
    tags:
      SMT_UNIT_REGEN_HP: 5
      SMT_UNIT_REGEN_WOUND: 1

  - &STR_DEATHWATCH_MARINE              # Deathwatch Marines
    type: STR_ULTRAMARINE
    tags:
      SMT_UNIT_REGEN_HP: 8 # Vet level
      SMT_UNIT_REGEN_WOUND: 2 # Vet level
      SMT_UNIT_REGEN_PENALTY_REDUCTION: 50 # DW bonus, ignore 50% of recovery time added by healing

  - type: STR_ULTRAMARINE
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_ULTRAMARINE_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_IMPERIALF
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_IMPERIALF_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_BLOODANGELS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_BLOODANGELS_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_SALAMANDAR
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_SALAMANDAR_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_BLACKT
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_BLACKT_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_WHITES
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_WHITES_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_DARKANGELS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_DARKANGELS_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_SPACEW
    tags:
      SMT_UNIT_REGEN_HP: 12 # +4 Spacewolf Bonus
      SMT_UNIT_REGEN_WOUND: 5 # +3 Spacewolf Bonus
      SMT_UNIT_REGEN_PENALTY_REDUCTION: 80 # +30% Spacewolf Bonus

  - type: STR_SPACEW_PRIMARIS
    tags:
      SMT_UNIT_REGEN_HP: 12 # +4 Spacewolf Bonus
      SMT_UNIT_REGEN_WOUND: 5 # +3 Spacewolf Bonus
      SMT_UNIT_REGEN_PENALTY_REDUCTION: 80 # +30% Spacewolf Bonus

  - type: STR_CRISMONF
    refNode: *STR_DEATHWATCH_MARINE

  - type: STR_CRISMONF_PRIMARIS
    refNode: *STR_DEATHWATCH_MARINE

  - &STR_DEATHWATCH_LEADER              # Deathwatch Captains
    type: STR_ULTRAMARINE_LEADER
    tags:
      SMT_UNIT_REGEN_HP: 10 # Vet level +2
      SMT_UNIT_REGEN_WOUND: 3 # Vet level +1
      SMT_UNIT_REGEN_PENALTY_REDUCTION: 60 # DW Captain bonus, ignore 60% of recovery time added by healing

  - type: STR_ULTRAMARINE_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_BLOODANGELS_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_IMPERIALF_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_SALAMANDAR_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_BLACKT_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_DARKANGELS_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_WHITES_LEADER
    refNode: *STR_DEATHWATCH_LEADER

  - type: STR_SPACEW_LEADER
    refNode: *STR_DEATHWATCH_LEADER
    tags:
      SMT_UNIT_REGEN_HP: 16 # +6 Spacewolf Bonus
      SMT_UNIT_REGEN_WOUND: 8 # +5 Spacewolf Bonus
      SMT_UNIT_REGEN_PENALTY_REDUCTION: 85 # +25% Spacewolf Bonus

  - type: STR_CRISMONF_LEADER
    refNode: *STR_DEATHWATCH_LEADER
