extended:
  tags:
    RuleSoldier:
      SMT_RESTRICTED_ITEM_USER: int # Soldier is allowed to used restricted item (1 = Chaplain, 2 = Deathwatch Marine)
    RuleItem:
      SMT_RESTRICTED_ITEM: int # Item should only be usable by certain units (1 = Crozius, 2 = Deathwatch Weapons)
      SMT_RESTRICTED_ACCURACY_PEN: int # Percentage of weapon accuracy when used by incorrect units
      SMT_RESTRICTED_DAMAGE_PEN: int # Percentage of weapon power when used by incorrect units
      SMT_RESTRICTED_ITEM_MELEE: int # if !0, also penalize power of melee hits

  scripts:
    accuracyMultiplierBonusStats:
      - new: SMTS_restricted_item_accuracy
        offset: 80
        code: |
          var ptr RuleSoldier unitSoldier;
          var int itemVal;
          var int unitVal;
          var int penalty;

          weapon.getTag itemVal Tag.SMT_RESTRICTED_ITEM;
          if eq itemVal 0;
            return bonus;
          end;

          unit.getRuleSoldier unitSoldier;
          unitSoldier.getTag unitVal Tag.SMT_RESTRICTED_ITEM_USER;
          if neq unitVal itemVal;
            weapon.getTag penalty Tag.SMT_RESTRICTED_ACCURACY_PEN;
            if gt penalty 0;
              muldiv bonus penalty 100; # divide accuracy by penalty value if set
            else;
              set bonus 0; # otherwise reduce to 0
            end;
          end;
          #debug_log "Restricted Item Acc Ping - " itemVal unitVal penalty;

          return bonus; # final accuracy

items:
  - &STR_RESTRICTED_ITEM    # Template
    scripts:
      hitUnitAmmo: |
        var ptr RuleSoldier unitSoldier;
        var int itemVal;
        var int unitVal;
        var int penalty;
        var int checkVal;

        weapon_item.getTag itemVal Tag.SMT_RESTRICTED_ITEM;
        attacker.getRuleSoldier unitSoldier;
        unitSoldier.getTag unitVal Tag.SMT_RESTRICTED_ITEM_USER;
        #debug_log "Restricted Item Dmg Ping - " itemVal unitVal;

        set checkVal unitVal;
        mod checkVal 10;
        if eq checkVal itemVal; # first digit check
          return power part side;
        end;

        set checkVal unitVal;
        div checkVal 10;
        mod checkVal 10;
        if eq checkVal itemVal; # second digit check
          return power part side;
        end;

        weapon_item.getTag itemVal Tag.SMT_RESTRICTED_ITEM_MELEE; # are melee attacks unrestricted?
        if and eq itemVal 0 eq battle_action battle_action_hit;
          return power part side;
        end;

        weapon_item.getTag penalty Tag.SMT_RESTRICTED_DAMAGE_PEN;
        if gt penalty 0;
          muldiv power penalty 100; # divide power by penalty value if set
        else;
          set power 0; # otherwise reduce to 0
        end;

        return power part side;

  - type: AUX_CROZIUS                   # Crozius Arcanum (Chaplain - 1)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 1

  - type: STR_RIFLEA                    # Artifex Bolter (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25

  - type: STR_RIFLEDW                   # DW Cawl Bolter (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25

  - type: STR_AUTO_CANNON_DW            # Artifex Heavy Bolter (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25

  - type: STR_LASCAN_DW                 # Artifex Lascannon (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25

  - type: STR_BOLT_SNIPER_RIFLE_DW      # DW Bolt Sniper Rifle (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25

  - type: STR_SHOTGUN_DW                # Deathwatch Shotgun (Deathwatch - 2)
    refNode: *STR_RESTRICTED_ITEM
    tags:
      SMT_RESTRICTED_ITEM: 2
      SMT_RESTRICTED_DAMAGE_PEN: 25


